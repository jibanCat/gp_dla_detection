"""
Test Bayesian model selection works the same as the MATLAB code.
"""
import numpy as np
import h5py

from run_bayes_select import process_qso

z_qsos = np.array(
    [
        2.30909729,
        2.49794078,
        2.328,
        2.377,
        3.71199346,
        2.163,
        2.559,
        2.35414815,
        2.16476059,
        2.18012738,
        2.52689695,
        2.79486632,
        2.38407612,
        2.87937236,
        2.66187549,
        2.71465468,
        3.00907731,
        2.27381587,
        3.12379503,
        2.49857759,
        3.25036073,
        2.21,
        2.42729211,
        2.21270967,
        2.831,
        2.254,
        2.39657283,
        2.46339011,
        2.36328721,
        2.239,
        2.48112321,
        2.59798813,
        2.17167497,
        2.77709556,
        2.17241502,
        2.17969203,
        2.43806911,
        2.3420279,
        3.08996773,
        2.32458925,
        3.27869344,
        2.38639498,
        2.62461281,
        2.45923853,
        2.6472578,
        2.67037129,
        3.48994994,
        2.28665376,
        2.42,
        2.51938796,
        2.359,
        3.02776122,
        3.184,
        2.647,
        2.99144745,
        2.52,
        2.70047212,
        2.281,
        2.63211083,
        2.40002203,
        2.22799587,
        2.75824738,
        2.23745632,
        2.632,
        2.62372422,
        2.77426267,
        2.73491144,
        2.90338302,
        2.95,
        2.45044851,
        2.521,
        3.53801084,
        2.92119694,
        2.238,
        2.40156841,
        3.23908782,
        3.21092677,
        2.373,
        2.79401779,
        3.09957933,
        2.3144598,
        2.23709273,
        2.343,
        2.435,
        2.196,
        2.58928752,
        2.344,
        2.67081285,
        2.422,
        2.3195591,
        2.412,
        2.606,
        2.75959373,
        2.38650107,
        2.416,
        2.611,
        2.52634978,
        2.65628123,
        2.57238936,
        2.69046688,
    ]
)

p_dlas = np.array(
    [
        3.26688972e-006,
        3.83387245e-001,
        1.96516980e-007,
        3.34011390e-008,
        5.95499579e-009,
        6.28749357e-021,
        1.75249316e-008,
        1.08421388e-009,
        2.50499977e-006,
        2.52358271e-002,
        2.69959991e-007,
        3.95859409e-006,
        3.86508691e-006,
        8.19295955e-006,
        2.08142284e-007,
        9.99998690e-001,
        6.67577612e-006,
        1.42478300e-006,
        2.93785844e-004,
        2.80101943e-008,
        9.68777986e-005,
        8.93423734e-007,
        8.28668233e-007,
        8.02171627e-007,
        5.32652729e-022,
        4.23958217e-008,
        5.71796881e-007,
        3.00006795e-007,
        9.29463178e-008,
        3.26666620e-066,
        8.70183608e-001,
        3.32676181e-008,
        4.33106229e-011,
        1.00000000e000,
        7.16460780e-008,
        1.18233868e-014,
        2.53768589e-007,
        6.88477467e-007,
        5.71771666e-008,
        4.13283695e-006,
        9.89117500e-005,
        1.19072554e-008,
        5.31543902e-008,
        1.86237404e-006,
        9.52416731e-008,
        1.61569322e-006,
        1.46658032e-017,
        2.86686084e-013,
        3.60121335e-054,
        1.71202040e-008,
        2.12649779e-054,
        1.00000000e000,
        1.32139294e-009,
        9.99999874e-001,
        1.69627999e-006,
        1.10061765e-004,
        1.00276954e-010,
        9.66931174e-010,
        1.00000000e000,
        1.51947893e-009,
        8.25677075e-008,
        8.74456579e-006,
        5.08979036e-010,
        3.62280714e-006,
        9.98846731e-001,
        2.69918279e-007,
        5.87126335e-001,
        8.56852326e-001,
        8.84232790e-004,
        1.00384625e-006,
        5.92931133e-028,
        1.45297307e-014,
        2.69093105e-001,
        9.14250067e-006,
        2.73379503e-006,
        3.83100250e-013,
        9.99999999e-001,
        5.07807772e-011,
        1.23780753e-018,
        1.06260729e-004,
        4.48498622e-006,
        1.02045246e-010,
        3.99591954e-059,
        6.38854965e-010,
        4.18010154e-008,
        1.66345291e-010,
        6.69991227e-007,
        9.22174483e-006,
        2.17894295e-030,
        4.45991111e-001,
        7.15779043e-006,
        8.46867833e-151,
        3.52750204e-003,
        7.93169676e-012,
        1.71145005e-008,
        1.00000000e000,
        2.42879751e-007,
        9.80000640e-001,
        7.24227803e-006,
        2.94756821e-007,
    ]
)

map_num_dlas = np.array(
    [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        2,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        2,
        0,
        1,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        1,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        1,
        0,
        1,
        0,
        0,
    ]
)

filenames = [
    "spec-6173-56238-0528.fits",
    "spec-6177-56268-0595.fits",
    "spec-4354-55810-0646.fits",
    "spec-6498-56565-0177.fits",
    "spec-6177-56268-0608.fits",
    "spec-4216-55477-0312.fits",
    "spec-6182-56190-0652.fits",
    "spec-4296-55499-0364.fits",
    "spec-7134-56566-0594.fits",
    "spec-6877-56544-0564.fits",
    "spec-6177-56268-0648.fits",
    "spec-4277-55506-0896.fits",
    "spec-4415-55831-0554.fits",
    "spec-4216-55477-0302.fits",
    "spec-4216-55477-0292.fits",
    "spec-7167-56604-0290.fits",
    "spec-6177-56268-0384.fits",
    "spec-4354-55810-0686.fits",
    "spec-7144-56564-0752.fits",
    "spec-6177-56268-0640.fits",
    "spec-7147-56574-0860.fits",
    "spec-7144-56564-0266.fits",
    "spec-6511-56540-0092.fits",
    "spec-6511-56540-0086.fits",
    "spec-6151-56265-0088.fits",
    "spec-4216-55477-0732.fits",
    "spec-4535-55860-0680.fits",
    "spec-6182-56190-0342.fits",
    "spec-7034-56564-0358.fits",
    "spec-6177-56268-0386.fits",
    "spec-6151-56265-0936.fits",
    "spec-6498-56565-0844.fits",
    "spec-7147-56574-0171.fits",
    "spec-6182-56190-0338.fits",
    "spec-4354-55810-0702.fits",
    "spec-6177-56268-0584.fits",
    "spec-6177-56268-0393.fits",
    "spec-4354-55810-0709.fits",
    "spec-6879-56539-0439.fits",
    "spec-6151-56265-0078.fits",
    "spec-7144-56564-0221.fits",
    "spec-4354-55810-0700.fits",
    "spec-4277-55506-0872.fits",
    "spec-6879-56539-0580.fits",
    "spec-6498-56565-0838.fits",
    "spec-6182-56190-0326.fits",
    "spec-6879-56539-0436.fits",
    "spec-4535-55860-0302.fits",
    "spec-7167-56604-0259.fits",
    "spec-6879-56539-0427.fits",
    "spec-4535-55860-0361.fits",
    "spec-4216-55477-0718.fits",
    "spec-4216-55477-0276.fits",
    "spec-4415-55831-0466.fits",
    "spec-6182-56190-0642.fits",
    "spec-6511-56540-0114.fits",
    "spec-6207-56239-0134.fits",
    "spec-4216-55477-0724.fits",
    "spec-6177-56268-0360.fits",
    "spec-4296-55499-0386.fits",
    "spec-4277-55506-0862.fits",
    "spec-7034-56564-0657.fits",
    "spec-4277-55506-0106.fits",
    "spec-6152-56164-0004.fits",
    "spec-6172-56269-0643.fits",
    "spec-7033-56565-0002.fits",
    "spec-4216-55477-0290.fits",
    "spec-4277-55506-0152.fits",
    "spec-6498-56565-0157.fits",
    "spec-7033-56565-0014.fits",
    "spec-4415-55831-0580.fits",
    "spec-4535-55860-0315.fits",
    "spec-6877-56544-0440.fits",
    "spec-6170-56240-0573.fits",
    "spec-4296-55499-0390.fits",
    "spec-6498-56565-0158.fits",
    "spec-6513-56543-0892.fits",
    "spec-6177-56268-0366.fits",
    "spec-4535-55860-0316.fits",
    "spec-6151-56265-0954.fits",
    "spec-4216-55477-0280.fits",
    "spec-4296-55499-0656.fits",
    "spec-4296-55499-0630.fits",
    "spec-7147-56574-0138.fits",
    "spec-4535-55860-0734.fits",
    "spec-4296-55499-0382.fits",
    "spec-7167-56604-0796.fits",
    "spec-6172-56269-0628.fits",
    "spec-4535-55860-0304.fits",
    "spec-6172-56269-0342.fits",
    "spec-4216-55477-0756.fits",
    "spec-7147-56574-0889.fits",
    "spec-4296-55499-0398.fits",
    "spec-7167-56604-0238.fits",
    "spec-4216-55477-0248.fits",
    "spec-7147-56574-0900.fits",
    "spec-4296-55499-0392.fits",
    "spec-6177-56268-0656.fits",
    "spec-6879-56539-0405.fits",
    "spec-7034-56564-0647.fits",
]


def test_p_dlas(num_quasars: int = 10):

    process_qso(filenames[:num_quasars], z_qsos[:num_quasars])

    with h5py.File("processed_qsos_multi_meanflux.h5", "r") as f:
        print("P(DLA | D)")
        print("----")
        print("Catalogue:", p_dlas[:num_quasars])
        print("Python code:", f["p_dlas"][()])
        assert np.all(np.abs(p_dlas[:num_quasars] - f["p_dlas"][()]) < 5e-2)

        MAP_num_dlas = np.nanargmax(f["model_posteriors"][()], axis=1)
        MAP_num_dlas = MAP_num_dlas - 1
        MAP_num_dlas[MAP_num_dlas < 0] = 0

        print("Num DLAs")
        print("----")
        print("Catalogue:", map_num_dlas[:num_quasars])
        print("Python code:", MAP_num_dlas)
        assert np.all(MAP_num_dlas == map_num_dlas[:num_quasars])
